# Generated by Django 5.1 on 2024-09-09 20:01

import api.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CitiesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='CountriesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='LocationsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='TypesClientsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'types_clients',
            },
        ),
        migrations.CreateModel(
            name='TypesIdsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'types_ids',
            },
        ),
        migrations.CreateModel(
            name='AddressesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('street', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=50, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.citiesmodel')),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='PersonsAddresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.addressesmodel')),
            ],
            options={
                'db_table': 'persons_addresses',
            },
        ),
        migrations.CreateModel(
            name='PersonsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('identification_id', models.CharField(max_length=100)),
                ('identification_picture', models.ImageField(null=True, upload_to=api.models.upload_to_identifications)),
                ('profile_picture', models.ImageField(null=True, upload_to=api.models.upload_to_profiles)),
                ('alias', models.CharField(max_length=50, null=True)),
                ('occupation', models.CharField(max_length=50, null=True)),
                ('firstname', models.CharField(max_length=50)),
                ('middlename', models.CharField(max_length=50, null=True)),
                ('lastname', models.CharField(max_length=50)),
                ('second_lastname', models.CharField(max_length=50, null=True)),
                ('mobile', models.CharField(max_length=20, null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('birthdate', models.DateField(null=True)),
                ('addresses', models.ManyToManyField(through='api.PersonsAddresses', to='api.addressesmodel')),
                ('type_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.typesidsmodel')),
            ],
            options={
                'db_table': 'persons',
            },
        ),
        migrations.AddField(
            model_name='personsaddresses',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.personsmodel'),
        ),
        migrations.CreateModel(
            name='StatesModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.countriesmodel')),
            ],
            options={
                'db_table': 'states',
            },
        ),
        migrations.AddField(
            model_name='citiesmodel',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.statesmodel'),
        ),
        migrations.CreateModel(
            name='ClientsModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('allow_credit', models.BooleanField(default=True)),
                ('note', models.CharField(max_length=100, null=True)),
                ('date_reg', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.locationsmodel')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.personsmodel')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='api.typesclientsmodel')),
            ],
            options={
                'db_table': 'clients',
            },
        ),
    ]
